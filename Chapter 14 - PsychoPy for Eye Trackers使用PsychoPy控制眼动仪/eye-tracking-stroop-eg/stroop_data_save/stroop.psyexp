<PsychoPy2experiment version="1.82.01" encoding="utf-8">
  <Settings>
    <Param name="Show mouse" val="False" valType="bool" updates="None"/>
    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['Participant'], expInfo['date'])" valType="code" updates="None"/>
    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>
    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>
    <Param name="color" val="black" valType="str" updates="None"/>
    <Param name="Window size (pixels)" val="[1280, 800]" valType="code" updates="None"/>
    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>
    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>
    <Param name="Experiment info" val="{u'Eye Tracker': u'tobii_std.yaml', u'Participant': u''}" valType="code" updates="None"/>
    <Param name="Save csv file" val="False" valType="bool" updates="None"/>
    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>
    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>
    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>
    <Param name="expName" val="stroop" valType="str" updates="None"/>
    <Param name="logging level" val="warning" valType="code" updates="None"/>
    <Param name="blendMode" val="avg" valType="str" updates="None"/>
    <Param name="Save excel file" val="False" valType="bool" updates="None"/>
    <Param name="Units" val="use prefs" valType="str" updates="None"/>
    <Param name="Save log file" val="True" valType="bool" updates="None"/>
    <Param name="Screen" val="1" valType="num" updates="None"/>
  </Settings>
  <Routines>
    <Routine name="fixation">
      <TextComponent name="text">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="text" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="+" valType="str" updates="constant"/>
        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="trial">
      <TextComponent name="stimulus">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulus" valType="code" updates="constant"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="$stimColor" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimText" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="10" valType="code" updates="constant"/>
        <Param name="durationEstim" val="5" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="resp">
        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="resp" valType="code" updates="None"/>
        <Param name="stopVal" val="10" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="&quot;left&quot;,&quot;down&quot;,&quot;right&quot;" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.0" valType="code" updates="None"/>
        <Param name="store" val="last key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <CodeComponent name="eye_track_code">
        <Param name="Begin Experiment" val="import csv&#10;&#10;#Lets have a flag to say our header has not been written to gaze data file&#10;header_written = False&#10;&#10;eyetracker =False#will change if we get one!&#10;&#10;if expInfo['Eye Tracker']:&#10;    from psychopy.iohub import EventConstants,ioHubConnection,load,Loader&#10;    from psychopy.data import getDateStr&#10;    # Load the specified iohub configuration file converting it to a python dict.&#10;    io_config=load(file(expInfo['Eye Tracker'],'r'), Loader=Loader)&#10;&#10;    # Add / Update the session code to be unique. Here we use the psychopy getDateStr() function for session code generation&#10;    session_info=io_config.get('data_store').get('session_info')&#10;    session_info.update(code=&quot;S_%s&quot;%(getDateStr()))&#10;&#10;    # Create an ioHubConnection instance, which starts the ioHubProcess, and informs it of the requested devices and their configurations.&#10;    io=ioHubConnection(io_config)&#10;&#10;    iokeyboard=io.devices.keyboard&#10;    mouse=io.devices.mouse&#10;    if io.getDevice('tracker'):&#10;        eyetracker=io.getDevice('tracker')&#10;        #Make smaller screen and minimize&#10;        win.fullscr = False&#10;        win.flip()&#10;        win.winHandle.minimize()&#10;        win.flip()&#10;        &#10;        #Run our calibration&#10;        eyetracker.runSetupProcedure()&#10;        &#10;        #Once complete, bring our exp screen back&#10;        win.fullscr = True&#10;        win.winHandle.activate()&#10;        win.winHandle.maximize()&#10;&#10;    x,y=0,0&#10;&#10;&#10;#Now lets open up a data file to save our Gaze data&#10;file_name = u'data' + os.sep + str(expInfo['Participant'])+&quot;_&quot;+str(expInfo['date'])+&quot;_gazedata.csv&quot;&#10;&#10;gaze_file = open(file_name, &quot;wb&quot;)&#10;writer = csv.writer(gaze_file)" valType="extendedCode" updates="constant"/>
        <Param name="name" val="eye_track_code" valType="code" updates="None"/>
        <Param name="Begin Routine" val="if eyetracker:&#10;    #Clear any events ready to start recording&#10;    io.clearEvents('all')&#10;    #Now fetch some data at the start of the routine.&#10;    eyetracker.setRecordingState(True)&#10;" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="#If we had an eye tracker available, then lets dump out our data that should have been recorded&#10;if eyetracker:&#10;    #Here is what we captured during the recording...&#10;    outdata = eyetracker.getEvents()&#10;    &#10;    #Lets say that we are not recording now&#10;    eyetracker.setRecordingState(False)&#10;&#10;    #append any new data&#10;    for index, row in enumerate(outdata):&#10;        #dict_temp = dict((name, getattr(row, name)) for name in dir(row) if not name.startswith('__'))&#10;        dict_temp = row._asdict()&#10;&#10;        #ADD IN OUR NEW DATA HERE QUICKLY&#10;        dict_temp.update({'stim_colour': stimColor})&#10;        &#10;        #Have we written the header yet?&#10;        if header_written == False:&#10;            writer.writerow(dict_temp.keys())&#10;            header_written = True #Dont do it again!&#10;        &#10;        #Write out data row&#10;        writer.writerow(dict_temp.values())" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="if eyetracker:&#10;    eyetracker.setConnectionState(False)&#10;    io.quit()&#10;    gaze_file.close()" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
    </Routine>
    <Routine name="instruct">
      <TextComponent name="instrText">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="instrText" valType="code" updates="constant"/>
        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>
        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>
        <Param name="text" val="OK. Ready?&#10;&#10;Remember:&#13;&#10;1) Stay fixated on the central white dot.&#13;&#10;2) Ignore the word itself; press:&#10;&#9;- Left for red LETTERS&#10;&#9;- Down for green LETTERS&#10;&#9;- Right for blue LETTERS&#10;&#9;- (Esc will quit)&#10;&#10;Press any key to continue" valType="str" updates="constant"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="ready">
        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="ready" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="thanks">
      <TextComponent name="thanksText">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="thanksText" valType="code" updates="constant"/>
        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>
        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>
        <Param name="text" val="This is the end of the experiment.&#10;&#10;Thanks!" valType="str" updates="constant"/>
        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.0" valType="code" updates="None"/>
        <Param name="font" val="arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instruct"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>
      <Param name="name" val="trials" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="3" valType="num" updates="None"/>
      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'stimColor': u'red', u'stimText': u'red', u'congruent': 1, u'corrAns': u'left'}, {u'stimColor': u'green', u'stimText': u'red', u'congruent': 0, u'corrAns': u'down'}, {u'stimColor': u'green', u'stimText': u'green', u'congruent': 1, u'corrAns': u'down'}, {u'stimColor': u'blue', u'stimText': u'green', u'congruent': 0, u'corrAns': u'right'}, {u'stimColor': u'blue', u'stimText': u'blue', u'congruent': 1, u'corrAns': u'right'}, {u'stimColor': u'red', u'stimText': u'blue', u'congruent': 0, u'corrAns': u'left'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
