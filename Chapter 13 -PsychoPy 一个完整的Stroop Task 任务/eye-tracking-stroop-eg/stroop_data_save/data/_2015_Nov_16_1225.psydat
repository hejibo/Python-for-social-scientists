ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
S'C:\\Users\\admin\\Desktop\\frank_psychopy_test\\stroop_data_save\\stroop.psyexp'
p7
sS'dataFileName'
p8
VC:\u005cUsers\u005cadmin\u005cDesktop\u005cfrank_psychopy_test\u005cstroop_data_save\u005cdata\u005c_2015_Nov_16_1225
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'stroop'
p12
sS'dataNames'
p13
(lp14
S'resp.keys'
p15
aS'resp.corr'
p16
aS'resp.rt'
p17
asS'autoLog'
p18
I01
sS'extraInfo'
p19
(dp20
VEye Tracker
p21
Vtobii_std.yaml
p22
sS'date'
p23
V2015_Nov_16_1225
p24
sS'expName'
p25
g12
sVParticipant
p26
V
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xdd\xaaGYU\xefM@'
tRp31
ssS'loopsUnfinished'
p32
(lp33
sS'saveWideText'
p34
I01
sS'thisEntry'
p35
(dp36
sS'version'
p37
S''
sS'_paramNamesSoFar'
p38
(lp39
VstimColor
p40
aVstimText
p41
aVcongruent
p42
aVcorrAns
p43
asS'entries'
p44
(lp45
(dp46
g15
S'down'
p47
sg41
Vred
p48
sg26
V
sg16
I1
sg21
g22
sg17
F0.68872437230402284
sg27
g31
sS'trials.thisN'
p49
I0
sg40
Vgreen
p50
sg42
I0
sg25
g12
sS'trials.thisTrialN'
p51
I0
sg43
Vdown
p52
sS'trials.thisRepN'
p53
I0
sg23
g24
sS'trials.thisIndex'
p54
g28
(g29
(S'i4'
I0
I1
tRp55
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x01\x00\x00\x00'
tRp56
sa(dp57
g15
S'left'
p58
sg41
g48
sg26
V
sg16
I1
sg21
g22
sg17
F0.4345074106413449
sg27
g31
sS'trials.thisN'
p59
I1
sg40
g48
sg42
I1
sg25
g12
sS'trials.thisTrialN'
p60
I1
sg43
Vleft
p61
sS'trials.thisRepN'
p62
I0
sg23
g24
sS'trials.thisIndex'
p63
g28
(g55
S'\x00\x00\x00\x00'
tRp64
sa(dp65
g15
S'right'
p66
sg41
g48
sg26
V
sg16
I0
sg21
g22
sg17
F0.31543848221099324
sg27
g31
sS'trials.thisN'
p67
I2
sg40
g48
sg42
I1
sg25
g12
sS'trials.thisTrialN'
p68
I0
sg43
g61
sS'trials.thisRepN'
p69
I1
sg23
g24
sS'trials.thisIndex'
p70
g28
(g55
S'\x00\x00\x00\x00'
tRp71
sa(dp72
g15
S'down'
p73
sg41
g48
sg26
V
sg16
I1
sg21
g22
sg17
F0.26527353464734915
sg27
g31
sS'trials.thisN'
p74
I3
sg40
g50
sg42
I0
sg25
g12
sS'trials.thisTrialN'
p75
I1
sg43
g52
sS'trials.thisRepN'
p76
I1
sg23
g24
sS'trials.thisIndex'
p77
g28
(g55
S'\x01\x00\x00\x00'
tRp78
sa(dp79
g15
S'left'
p80
sg41
g48
sg26
V
sg16
I1
sg21
g22
sg17
F8.9605127999247998
sg27
g31
sS'trials.thisN'
p81
I4
sg40
g48
sg42
I1
sg25
g12
sS'trials.thisTrialN'
p82
I0
sg43
g61
sS'trials.thisRepN'
p83
I2
sg23
g24
sS'trials.thisIndex'
p84
g28
(g55
S'\x00\x00\x00\x00'
tRp85
sa(dp86
g15
S'down'
p87
sg41
g48
sg26
V
sg16
I1
sg21
g22
sg17
F0.72106369369703316
sg27
g31
sS'trials.thisN'
p88
I5
sg40
g50
sg42
I0
sg25
g12
sS'trials.thisTrialN'
p89
I1
sg43
g52
sS'trials.thisRepN'
p90
I2
sg23
g24
sS'trials.thisIndex'
p91
g28
(g55
S'\x01\x00\x00\x00'
tRp92
sasS'loops'
p93
(lp94
g1
(cpsychopy.data
TrialHandler
p95
g3
NtRp96
(dp97
S'origin'
p98
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['Participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1280, 800]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'Eye Tracker': u'tobii_std.yaml', u'Participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="stroop" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="fixation">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <TextComponent name="stimulus">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimText" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="10" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="5" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="10" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="&quot;left&quot;,&quot;down&quot;,&quot;right&quot;" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="eye_track_code">\u000a        <Param name="Begin Experiment" val="import csv&#10;&#10;#Lets have a flag to say our header has not been written to gaze data file&#10;header_written = False&#10;&#10;eyetracker =False#will change if we get one!&#10;&#10;if expInfo['Eye Tracker']:&#10;    from psychopy.iohub import EventConstants,ioHubConnection,load,Loader&#10;    from psychopy.data import getDateStr&#10;    # Load the specified iohub configuration file converting it to a python dict.&#10;    io_config=load(file(expInfo['Eye Tracker'],'r'), Loader=Loader)&#10;&#10;    # Add / Update the session code to be unique. Here we use the psychopy getDateStr() function for session code generation&#10;    session_info=io_config.get('data_store').get('session_info')&#10;    session_info.update(code=&quot;S_%s&quot;%(getDateStr()))&#10;&#10;    # Create an ioHubConnection instance, which starts the ioHubProcess, and informs it of the requested devices and their configurations.&#10;    io=ioHubConnection(io_config)&#10;&#10;    iokeyboard=io.devices.keyboard&#10;    mouse=io.devices.mouse&#10;    if io.getDevice('tracker'):&#10;        eyetracker=io.getDevice('tracker')&#10;        #Make smaller screen and minimize&#10;        win.fullscr = False&#10;        win.flip()&#10;        win.winHandle.minimize()&#10;        win.flip()&#10;        &#10;        #Run our calibration&#10;        eyetracker.runSetupProcedure()&#10;        &#10;        #Once complete, bring our exp screen back&#10;        win.fullscr = True&#10;        win.winHandle.activate()&#10;        win.winHandle.maximize()&#10;&#10;    x,y=0,0&#10;&#10;&#10;#Now lets open up a data file to save our Gaze data&#10;file_name = u'data' + os.sep + str(expInfo['Participant'])+&quot;_&quot;+str(expInfo['date'])+&quot;_gazedata.csv&quot;&#10;&#10;gaze_file = open(file_name, &quot;wb&quot;)&#10;writer = csv.writer(gaze_file)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="eye_track_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if eyetracker:&#10;    #Clear any events ready to start recording&#10;    io.clearEvents('all')&#10;    #Now fetch some data at the start of the routine.&#10;    eyetracker.setRecordingState(True)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="#If we had an eye tracker available, then lets dump out our data that should have been recorded&#10;if eyetracker:&#10;    #Here is what we captured during the recording...&#10;    outdata = eyetracker.getEvents()&#10;    &#10;    #Lets say that we are not recording now&#10;    eyetracker.setRecordingState(False)&#10;&#10;    #append any new data&#10;    for index, row in enumerate(outdata):&#10;        #dict_temp = dict((name, getattr(row, name)) for name in dir(row) if not name.startswith('__'))&#10;        dict_temp = row._asdict()&#10;&#10;        #ADD IN OUR NEW DATA HERE QUICKLY&#10;        dict_temp.update({'stim_colour': stimColor})&#10;        &#10;        #Have we written the header yet?&#10;        if header_written == False:&#10;            writer.writerow(dict_temp.keys())&#10;            header_written = True #Dont do it again!&#10;        &#10;        #Write out data row&#10;        writer.writerow(dict_temp.values())" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="if eyetracker:&#10;    eyetracker.setConnectionState(False)&#10;    io.quit()&#10;    gaze_file.close()" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instruct">\u000a      <TextComponent name="instrText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrText" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK. Ready?&#10;&#10;Remember:&#13;&#10;1) Stay fixated on the central white dot.&#13;&#10;2) Ignore the word itself; press:&#10;&#9;- Left for red LETTERS&#10;&#9;- Down for green LETTERS&#10;&#9;- Right for blue LETTERS&#10;&#9;- (Esc will quit)&#10;&#10;Press any key to continue" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ready">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ready" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksText" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end of the experiment.&#10;&#10;Thanks!" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instruct"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimColor': u'red', u'stimText': u'red', u'congruent': 1, u'corrAns': u'left'}, {u'stimColor': u'green', u'stimText': u'red', u'congruent': 0, u'corrAns': u'down'}, {u'stimColor': u'green', u'stimText': u'green', u'congruent': 1, u'corrAns': u'down'}, {u'stimColor': u'blue', u'stimText': u'green', u'congruent': 0, u'corrAns': u'right'}, {u'stimColor': u'blue', u'stimText': u'blue', u'congruent': 1, u'corrAns': u'right'}, {u'stimColor': u'red', u'stimText': u'blue', u'congruent': 0, u'corrAns': u'left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="fixation"/>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p99
sS'thisTrial'
p100
(lp101
sS'_exp'
p102
I152959792
sg11
S'trials'
p103
sg6
g7
sS'thisRepN'
p104
I3
sg18
I01
sg19
g20
sS'data'
p105
g1
(cpsychopy.data
DataHandler
p106
c__builtin__
dict
p107
(dp108
S'ran'
p109
cnumpy.ma.core
_mareconstruct
p110
(cnumpy.ma.core
MaskedArray
p111
cnumpy
ndarray
p112
(I0
tp113
S'b'
tRp114
(I1
(I2
I3
tg29
(S'f4'
I0
I1
tRp115
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00'
Ntbsg15
g110
(g111
g112
g113
S'b'
tRp116
(I1
(I2
I3
tg29
(S'O4'
I0
I1
tRp117
(I3
S'|'
NNNI-1
I-1
I63
tbI00
S'\x800\x89\t\x00\xc1\xa5\x10\x80\xc6\xa5\x10\xc0C\xa5\x10\xc0\xc1\xa5\x10`\x8f\xa4\x10'
S'\x00\x00\x00\x00\x00\x00'
Ntbsg16
g110
(g111
g112
g113
S'b'
tRp118
(I1
(I2
I3
tg115
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p119
g110
(g111
g112
g113
S'b'
tRp120
(I1
(I2
I3
tg115
I00
S'\x00\x00\x80?\x00\x00\x00@\x00\x00\x80@\x00\x00\x00\x00\x00\x00@@\x00\x00\xa0@'
S'\x00\x00\x00\x00\x00\x00'
Ntbsg17
g110
(g111
g112
g113
S'b'
tRp121
(I1
(I2
I3
tg115
I00
S"\xc1w\xde>'\x81\xa1>C^\x0fA>P0?\xef\xd1\x87>\xa1\x978?"
S'\x00\x00\x00\x00\x00\x00'
NtbstRp122
(dp123
S'isNumeric'
p124
(dp125
g109
I01
sg15
I00
sg17
I01
sg119
I01
sg16
I01
ssg103
g96
sS'dataTypes'
p126
(lp127
g109
ag119
ag15
ag16
ag17
asS'dataShape'
p128
(lp129
I2
aI3
asbsS'method'
p130
S'random'
p131
sS'sequenceIndices'
p132
cnumpy.core.multiarray
_reconstruct
p133
(g112
(I0
tS'b'
tRp134
(I1
(I2
I3
tg55
I01
S'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
tbsS'finished'
p135
I01
sS'nReps'
p136
I3
sS'nRemaining'
p137
I-1
sS'trialList'
p138
(lp139
g1
(cpsychopy.data
TrialType
p140
g107
(dp141
g40
g48
sg41
g48
sg42
I1
sg43
g61
stRp142
ag1
(g140
g107
(dp143
g40
g50
sg41
g48
sg42
I0
sg43
g52
stRp144
asS'seed'
p145
NsS'thisIndex'
p146
g92
sS'thisN'
p147
I6
sS'thisTrialN'
p148
I0
sS'nTotal'
p149
I6
sS'_warnUseOfNext'
p150
I01
sbasS'savePickle'
p151
I00
sb.